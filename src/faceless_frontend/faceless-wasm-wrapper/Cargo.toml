[package]
name = "faceless-wasm-wrapper"
version = "0.1.0"
authors = ["zhicong.hzc <zhicong.hzc@alibaba-inc.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.87"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
wee_alloc = { version = "0.4.5", optional = true }

aibe = { path = '../../aibe', default-features = false }
base64 = { default-features = false, version = '0.13.0', features=["alloc"] }
rand = {version = "0.8.5", default-features = false}
borsh = { version = '0.9.1', default-features = false }
rand_chacha = { version = "0.3.1", default-features = false }
js-sys = "0.3.64"
serde = { version = "1.0", features = ["derive"] }
serde-wasm-bindgen = "0.4"

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"

[patch]
[patch.crates-io]
bn = {package = "zeropool-bn", path = "../../bn"}